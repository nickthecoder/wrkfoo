{
  "include": [
    "files",
    "directory",
    "gradle"
  ],
  "options": [
    {
      "code": ".",
      "label": "Open",
      "action": "os.open(row.file)",
      "if": "row.work != 'M'",
      "row": true,
      "multi": false,
      "newTab": false,
      "refreshResults": false,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "a",
      "label": "Git Add",
      "action": "os.exec('git', 'add', rows.collect {it.choppedPath} )\n  .dir(task.directory.value)",
      "row": true,
      "multi": true,
      "newTab": false,
      "refreshResults": true,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "d",
      "label": "Git Diff",
      "action": "os.exec('git', 'diff', row.choppedPath)\n  .dir(task.directory.value)",
      "row": true,
      "multi": false,
      "newTab": false,
      "refreshResults": false,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "c",
      "label": "Git Commit",
      "action": "os.term('git', 'commit')\n  .dir(task.directory.value)\n  .title(\"Git Commit\")\n  .simple()",
      "row": false,
      "multi": false,
      "newTab": true,
      "refreshResults": true,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "all",
      "label": "Git Commit All",
      "action": "os.term('git', 'commit', '-a')\n  .dir(task.directory.value)\n  .title(\"Git Commit\")\n  .simple()",
      "row": false,
      "multi": false,
      "newTab": true,
      "refreshResults": true,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "push",
      "label": "Git Push to Origin",
      "action": "os.term('git', 'push', '-u', 'origin')\n  .dir(task.directory.value)\n  .title(\"Git Push\")\n  .simple()",
      "row": false,
      "multi": false,
      "newTab": false,
      "refreshResults": false,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "ignore",
      "label": "Git Ignore",
      "action": "os.exec('echo', \"/\" + row.choppedPath)\n  .stdout(new FileSink(new File(task.directory.value,'.gitignore'),true))",
      "row": true,
      "multi": false,
      "newTab": false,
      "refreshResults": true,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "co",
      "label": "Git Check Out",
      "action": "os.exec( 'git', 'checkout', row.choppedPath )\n  .dir(task.directory.value)",
      "row": true,
      "multi": false,
      "newTab": false,
      "refreshResults": true,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "jd",
      "label": "View Javadocs",
      "action": "new HTMLViewer( new File( tool.directory, \"build/docs/javadoc/index.html\" ) )\n",
      "row": false,
      "multi": false,
      "newTab": true,
      "refreshResults": false,
      "prompt": false,
      "aliases": []
    },
    {
      "code": "-",
      "label": "Git Remove (rm)",
      "action": "os.exec('git', 'rm', rows.collect {it.choppedPath} )\n  .dir(task.directory.value)",
      "row": true,
      "multi": true,
      "newTab": false,
      "refreshResults": true,
      "prompt": false,
      "aliases": []
    }
  ]
}
