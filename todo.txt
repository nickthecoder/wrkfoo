Current Task
============

Replace dialog

BUGS
====

Moving editor tabs throws execptions, and removes tabs.

ExecTool break the convension of being defined by tool's class and parameters
	Doesn't have a non-arg constructor, so loading the tab will fail.
	Also consider re-runnable when loading/saving. Just ignore non-rerunnable when saving.
	Need a "builder"

Tabs lose their properites when dragged to a different MainWindow.

New Features
============

Ctrl+O in the editor to start a new Editor with parent filename

BooleanParameter
	hint attribute, which goes on the right
	Use a null label to have the tick boxes left aligned in the ParametersPanel
	use a "" label and a hint to have them aligned as usual, but with no label to the left.
	Maybe make the label "" or null by default.

Editor to have syntax highlighter choice, which is guessed based on extension when file is changed.

Editor saveAs changes the file to getParent then does check() to force parameter to appear?
	Nah, just run a saveAs Task.

Exec runWhenCompleted( Runnable )

Settings Task to edit the Settings data

Non-row option field in the status bar
	Settings allow the toolbars to be shown/hidden
		Non-row option field, Regular toolbar, Editor toolbar
	Global option to show the Settings Task.

MegaTabSet
	Tabs down the left edge, or a pulldown list in the toolbar
	Each MegaTab has its own tabset (and must know the filename of the tabset).
	This way, I can have multiple projects in a single window.

Find/Replace etc in Editor

Un-close tab. Useful when you close a tab by mistake.

Grep to open inbuilt editor and seach for the grep expression

Save Tab sets to remember the order and widths of the tabs

Editor to prompt when closing the tab without saving (if dirty)

Task : new prompt method, designed for non-command line usage. Hides the Details button, and does neverExit.
	Search options

F4 to prompt tasks/tools.

Embed a terminal emulator :
	https://github.com/JetBrains/jediterm/tree/master/terminal/src/com/jediterm/terminal

Go back/forward through History into a new tab (copies the entire history). ctrl+alt+left / right.

Add/Edit/New/Copy options doesn't support aliases. (Needs Multi-value parameter).
	Add another column.

WrkOption doesn't say which option file it is for

TabbedTool
	A tool, which has TWO or more tasks, and therefore many results.
	Useful when one item is made up of two different types of list.
	e.g. A wiki page has a set of versions, a set of back links, a set of forward links etc.
		So the WrkWikiPage, will have multiple tabs.
	
Popup Menu items :
	Merge the different options files together and sort by their code??? by Label???
	Maybe make the top-level ones bold (if that is possible).
		Global options aren't bold, but included ones are?
		Use background colors? Could specify a bg colour for each options file.
		Special menuitemfilter e.g. "*" to show everything, but it usually excludes globals. "-" to only show top level options.

RegexParameter - add popup-menu for oft used constructs, such as quote, whitespace, one or more, zero of more, identifier...
	Should grep then use RegexParameter?

Custom options applied to a tool
	e.g. WrkF is given more options, suitable only for images.
	Problem : For this to be useful, it needs to be added to the History, and saved in the tabset. Nasty.

Allow additional packages to be imported from the settings.json into GroovyScriptlet

Code review & Javadoc comments

Later Features
==============

Allow slow running tasks to update their results periodically.
	Maybe a new updatePartialResults method???
		But then updateResults will get called at then end, invalidating the whole table. Hmm.


Tree commands
	Rewrite wrkftree using a JTree, which gets more results when directories are opened. 

Filtering table results. See : https://docs.oracle.com/javase/tutorial/uiswing/components/table.html

Implement drag and drop across the commands
		Drag a file to "Places", and it will append it to its places file.
		Copy / Move files

FileParameters to have an icon?, which can be dropped onto a directory, which will set the dir name.

Much Later
==========

	ncurses option, so that wrkfoo can work quickly over ssh.
		Tools and Tasks don't interact with Swing, and this was a deliberate design decision, so that an ncurses-like
		frontend could be developed.

Unresolved bugs
===============
	