Current Task
============

Add Groovy Tool
	Add it to the "Home" page
	Prompts for a .groovy file, and creates a Tool from it (see GroovyScriplet and TabSetData)

Add a CodeCounter tool to myw wrkfoo tabset, and ensure it can be saved/restored.

BUGS
====

Places doesn't allow hidden files in the pull down???

Editor toolbar appears when tabset is loaded, even though it isn't on the selected tab.
	Shouldn't have a list of tools passed to MainFrame constructor.
	Probably MainWindow.getMainWindow(component) is returning null

Editor doesn't offer "Close without saving" when closing the tab or opening a different document.

ExecTool breaks the convension of being defined by tool's class and parameters
	Doesn't have a non-arg constructor, so loading the tab will fail.
	Also consider re-runnable when loading/saving. Just ignore non-rerunnable when saving.
	Need a "builder"

New Features
============

Embed a terminal emulator :
	https://github.com/JetBrains/jediterm/tree/master/terminal/src/com/jediterm/terminal

OptionData doesn't handle aliases
	WrkOptions needs a new column. Hide it and make it the tooltip for the code column.

Add "description" to Option
	Us it (or the first sentence) as tooltips for the popup menus.

MegaTabSet aka TabGroups
	Tabs down the left edge, or a pulldown list in the toolbar
	Each MegaTab has its own tabset (and must know the filename of the tabset).
	This way, I can have multiple projects in a single window.
	Ensure tab shortcuts are applied to the tabbedpane, so that they still work when a shortcut is shared by tabs in different mega-tabs.

Editor saveAs 

Editor to prompt when closing the tab without saving (if dirty)

Settings Task to edit the Settings data
	Settings to show/hide toolbars. Either toolbar,statusbar or hide.
	Use EnumParameter
		EnumParameter to format the labels cleverly FOO -> Foo, FOO_BAR -> Foo Bar
	Settings to show/hide each tool bar item
		Put them into GroupParameters - a good way to force me to get this right!



Nice-to-Haves
=============

action and ifScript to use Editor
	default to 3 or 4 lines JTextArea, but with a button to popup a full editor.
	EditorPane interacts with new EditorWindow instead of Editor.
	Maybe rename Editor to EditorTool.

Un-close tab. Useful when you close a tab by mistake.

Save Tab sets to remember the order and widths of the columns

RegexParameter - add popup-menu for oft used constructs, such as quote, whitespace, one or more, zero of more, identifier...
	Should grep then use RegexParameter?

Filtering table results. See : https://docs.oracle.com/javase/tutorial/uiswing/components/table.html

Undecided
=========

Would like to launch a browser window for javadocs from the gitstatus Tool
	Plus run the rsync and launch the published version too (specific to my setup).
		Put this in a "Custom" place (see below)

Later Features
==============
The following features may taks some time, for little benefit, so don't have a high priority.

TabbedTool
	A tool, which has TWO or more tasks, and therefore many results.
	Useful when one item is made up of two different types of list.
	e.g. A wiki page has a set of versions, a set of back links, a set of forward links etc.
		So the WrkWikiPage, will have multiple tabs.

Custom options applied to a tool
	e.g. WrkF is given more options, suitable only for images.
	Problem : For this to be useful, it needs to be added to the History, and saved in the tabset. Nasty.

Editor to have syntax highlighter choice, which is guessed based on extension when file is changed.

Allow slow running tasks to update their results periodically.
	Maybe a new updatePartialResults method???
		But then updateResults will get called at then end, invalidating the whole table. Hmm.

Tree commands
	Rewrite wrkftree using a JTree, which gets more results when directories are opened. 

Implement drag and drop across the commands
		Drag a file to "Places", and it will append it to its places file.
		Copy / Move files

FileParameters to have an icon?, which can be dropped onto a directory, which will set the dir name.

Much Later
==========

	ncurses option, so that wrkfoo can work quickly over ssh.
		Tools and Tasks don't interact with Swing, and this was a deliberate design decision, so that an ncurses-like
		frontend could be developed.
