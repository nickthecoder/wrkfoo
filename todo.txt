Current Task
============

Fix Places options (remove needs work, maybe others).

Drag files from WrkF (and other WrappedFile results)
    Maybe create a new subclas of ListTableTool FileListTableTool? Hmm, use a special interface instead?

Rename "TabSet" to "Project"

Edit Settings - a Task (not a Tool), where each of the Resources attributes are a represented as a Parameter
    But maybe this Task should be in its own tab, and therefore we need a TaskTool, where the results pane
        is ALWAYS hidden, and we only see the parameters
        "Go" is replaced by "OK", or maybe the updates happen without the need for "OK"
    TaskTool has a "goLabel" attribute, if null, then the Go button is not visible.

BUGS
====

Git Status is not focusing on the non-row option when empty only when running from command line.

Terminal does not output anything for short-lived commands (such as a simple "ls").

Editor toolbar appears when tabset is loaded, even though it isn't on the selected tab.
    It is the (lack of) change event from TabbedPane?

New Features
============

Places to accept Drag and Drop files.

A window to have a current directory, then basic git/gradle commands can be a GLOBAL.
    Make it more generic, allow for any number of named values that the groovy scripts can use.
        Put them in a single map
    Choose the type, String, File, Integer etc, plus Groovy Eval - run a Groovy script to get the value.

trolCommander style split screen to make copy/move easier.

Git stash features
	http://stackoverflow.com/questions/1105253/how-would-i-extract-a-single-file-or-changes-to-a-file-from-a-git-stash

    Then maybe implement a compound Tool "Git", which has a GitStatus AND a GitStash
    Later have other Git lists, such as branches, tags.
    Or just reply on shortcuts to switch between different Git tools, e.g. alt+s for git status, alt+b for git branches etc.

Non-row options to have shortcuts


Editor doesn't offer "Close without saving" when closing the tab or opening a different document.

Editor doesn't detect when the file has changed on disk.

Editor saveAs , rename

Settings Task to edit the Settings data
	Settings to show/hide toolbars. Either toolbar,statusbar or hide.
	Use EnumParameter
		EnumParameter to format the labels cleverly FOO -> Foo, FOO_BAR -> Foo Bar
	Settings to show/hide each tool bar item
		Put them into GroupParameters - a good way to force me to get this right!

Terminal to have shortcuts so that it is easy to move away from the Terminal using the keyboard.
    trolCommander creates a subclass of JediTermWidget which creates its own subclass of TerminalPane,
    and this TerminalPane has its own actions with shortcuts.
    
Nice-to-Haves
=============

TextEditorParameter, for editing chunks of code (such as groovy scripts, xml, json etc)
    Right click on the "plain" JTextPane for a "Edit..." option, which pops up an EditorWindow
    Share the same document between the Parameter's component and the EditorWidget, so changes
      appear in both.

action and ifScript to use Editor
	default to 3 or 4 lines JTextArea, but with a button to popup a full editor.
	EditorPane interacts with new EditorWindow instead of Editor.
    EditorWindow and MainWindow both implement TopLevel, which has toolbar hooks.
    Keep MainWindow.getMainWindow, but also have TopLevel.getTopLevel()
    TopLevel.getFrame() returns the JFrame.

Un-close tab. Useful when you close a tab by mistake. (shift+ctrl+T)

Save Tab sets to remember the order and widths of the columns
    Only possible with regular TableTools, not with future compound tools, such as the planned trolCommaner-like tools.

RegexParameter - add popup-menu for oft used constructs, such as quote, whitespace, one or more, zero of more, identifier...
	Should grep then use RegexParameter?

Filtering table results. See : https://docs.oracle.com/javase/tutorial/uiswing/components/table.html

Undecided
=========

Would like to launch a browser window for javadocs from the gitstatus Tool
	Plus run the rsync and launch the published version too (specific to my setup).
		Put this in a "Custom" place (see below)

Later Features
==============
The following features may taks some time, for little benefit, so don't have a high priority.

TabbedTool
	A tool, which has TWO or more tasks, and therefore many results.
	Useful when one item is made up of two different types of list.
	e.g. A wiki page has a set of versions, a set of back links, a set of forward links etc.
		So the WrkWikiPage, will have multiple tabs.

Custom options applied to a tool
	e.g. WrkF is given more options, suitable only for images.
	Problem : For this to be useful, it needs to be added to the History, and saved in the tabset. Nasty.
    Can we create a WrappedTool, which has the names of additional option file(s).
    Maybe just create a subclass of WrkF for images, which sets the fileExtension filter,
        and has its own options file which includes the wrkf's options file.

Look at trolCommander to see what I can pinch from it???
    http://trolsoft.ru/en/soft/trolcommander

Editor to have syntax highlighter choice, which is guessed based on extension when file is changed.

Allow slow running tasks to update their results periodically.
	Maybe a new updatePartialResults method???
		But then updateResults will get called at then end, invalidating the whole table. Hmm.

Tree commands
	Rewrite wrkftree using a JTree, which gets more results when directories are opened. 

Implement drag and drop across the commands
		Drag a file to "Places", and it will append it to its places file.
		Copy / Move files

FileParameters to have an icon?, which can be dropped onto a directory, which will set the dir name.

Much Later
==========

	ncurses option, so that wrkfoo can work quickly over ssh.
		Tools and Tasks don't interact with Swing, and this was a deliberate design decision, so that an ncurses-like
		frontend could be developed.
